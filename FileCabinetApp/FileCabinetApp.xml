<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FileCabinetApp</name>
    </assembly>
    <members>
        <member name="T:FileCabinetApp.CustomValidator">
            <summary>Provides functionality to data validation by custom parameters.</summary>
        </member>
        <member name="M:FileCabinetApp.CustomValidator.NameIsCorrect(System.String)">
            <summary>Name validation.</summary>
            <param name="name">Input string representing the name.</param>
            <returns>Returns false and exception message if name is incorrect, else returns true.</returns>
        </member>
        <member name="M:FileCabinetApp.CustomValidator.DateOfBirthIsCorrect(System.DateTime)">
            <summary>Date of birth validation.</summary>
            <param name="dateOfBirth">Date of birth.</param>
            <returns>Returns false and exception message if date of birth is incorrect, else returns true.</returns>
        </member>
        <member name="M:FileCabinetApp.CustomValidator.WorkPlaceNumberIsCorrect(System.Int16)">
            <summary>Work place number validation.</summary>
            <param name="workPlaceNumber">Work place number.</param>
            <returns>Returns false and exception message if work place number is incorrect, else returns true.</returns>
        </member>
        <member name="M:FileCabinetApp.CustomValidator.SalaryIsCorrect(System.Decimal)">
            <summary>Salary validation.</summary>
            <param name="salary">Salary.</param>
            <returns>Returns false and exception message if salary is incorrect, else returns true.</returns>
        </member>
        <member name="M:FileCabinetApp.CustomValidator.DepartmentIsCorrect(System.Char)">
            <summary>Department validation.</summary>
            <param name="department">Department.</param>
            <returns>Returns false and exception message if department is incorrect, else returns true.</returns>
        </member>
        <member name="M:FileCabinetApp.CustomValidator.ValidateParameters(FileCabinetApp.FileCabinetRecord)">
            <summary>Record validation.</summary>
            <param name="record">Object representing a record.</param>
        </member>
        <member name="T:FileCabinetApp.DefaultValidator">
            <summary>Provides functionality to data validation by default parameters.</summary>
        </member>
        <member name="M:FileCabinetApp.DefaultValidator.NameIsCorrect(System.String)">
            <summary>Name validation.</summary>
            <param name="name">Input string representing the name.</param>
            <returns>Returns false and exception message if name is incorrect, else returns true.</returns>
        </member>
        <member name="M:FileCabinetApp.DefaultValidator.DateOfBirthIsCorrect(System.DateTime)">
            <summary>Date of birth validation.</summary>
            <param name="dateOfBirth">Date of birth.</param>
            <returns>Returns false and exception message if date of birth is incorrect, else returns true.</returns>
        </member>
        <member name="M:FileCabinetApp.DefaultValidator.WorkPlaceNumberIsCorrect(System.Int16)">
            <summary>Work place number validation.</summary>
            <param name="workPlaceNumber">Work place number.</param>
            <returns>Returns false and exception message if work place number is incorrect, else returns true.</returns>
        </member>
        <member name="M:FileCabinetApp.DefaultValidator.SalaryIsCorrect(System.Decimal)">
            <summary>Salary validation.</summary>
            <param name="salary">Salary.</param>
            <returns>Returns false and exception message if salary is incorrect, else returns true.</returns>
        </member>
        <member name="M:FileCabinetApp.DefaultValidator.DepartmentIsCorrect(System.Char)">
            <summary>Department validation.</summary>
            <param name="department">Department.</param>
            <returns>Returns false and exception message if department is incorrect, else returns true.</returns>
        </member>
        <member name="M:FileCabinetApp.DefaultValidator.ValidateParameters(FileCabinetApp.FileCabinetRecord)">
            <summary>Record validation.</summary>
            <param name="record">Object representing a record.</param>
        </member>
        <member name="T:FileCabinetApp.FileCabinetFilesystemService">
            <summary>Class for working with records.</summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.#ctor(System.IO.FileStream,FileCabinetApp.IRecordValidator)">
            <summary>Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetFilesystemService"/> class.</summary>
            <param name="fileStream">FileStream.</param>
            <param name="validator">Validator.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.CreateRecord(FileCabinetApp.FileCabinetRecord)">
            <summary>Creates a record and returns its id.</summary>
            <param name="record">Object representing a record.</param>
            <returns>Id of a new record.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.EditRecord(FileCabinetApp.FileCabinetRecord)">
            <summary>Edits a record with the specified id.</summary>
            <param name="record">Object representing a record.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.FindByFirstName(System.String)">
            <summary>Finds records by first name.</summary>
            <param name="firstName">First name to find.</param>
            <returns>Returns readonly collection of found records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.FindByLastName(System.String)">
            <summary>Finds records by last name.</summary>
            <param name="lastName">Last name to find.</param>
            <returns>Returns readonly collection of found records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.FindByDateOfBirth(System.String)">
            <summary>Finds records by date of birth.</summary>
            <param name="dateOfBirth">Date of birth to find.</param>
            <returns>Returns readonly collection of found records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.GetRecords">
            <summary>Returns all records.</summary>
            <returns>Returns readonly collection of all records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.GetStat">
            <summary>Returns number of records.</summary>
            <returns>Returns number.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.MakeSnapshot">
            <summary>Makes snapshot of current object state.</summary>
            <returns>Returns new <see cref="T:FileCabinetApp.FileCabinetServiceSnapshot"/>.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.Restore(FileCabinetApp.FileCabinetServiceSnapshot)">
            <summary>Restores the specified snapshot.</summary>
            <param name="snapshot">Snapshot.</param>
        </member>
        <member name="T:FileCabinetApp.FileCabinetMemoryService">
            <summary>Class for working with records.</summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.#ctor(FileCabinetApp.IRecordValidator)">
            <summary>Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetMemoryService"/> class.</summary>
            <param name="validator">Validator.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.CreateRecord(FileCabinetApp.FileCabinetRecord)">
            <summary>Creates a record and returns its id.</summary>
            <param name="record">Object representing a record.</param>
            <returns>Id of a new record.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when record is null.</exception>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.EditRecord(FileCabinetApp.FileCabinetRecord)">
            <summary>Edits a record with the specified id.</summary>
            <param name="record">Object representing a record.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when record is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when no record with the specified id.</exception>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.FindByFirstName(System.String)">
            <summary>Finds records by first name.</summary>
            <param name="firstName">First name to find.</param>
            <returns>Returns readonly collection of found records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.FindByLastName(System.String)">
            <summary>Finds records by last name.</summary>
            <param name="lastName">Last name to find.</param>
            <returns>Returns readonly collection of found records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.FindByDateOfBirth(System.String)">
            <summary>Finds records by date of birth.</summary>
            <param name="dateOfBirth">Date of birth to find.</param>
            <returns>Returns readonly collection of found records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.GetRecords">
            <summary>Returns all records.</summary>
            <returns>Returns readonly collection of all records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.GetStat">
            <summary>Returns number of records.</summary>
            <returns>Returns number.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.MakeSnapshot">
            <summary>Makes snapshot of current object state.</summary>
            <returns>Returns new <see cref="T:FileCabinetApp.FileCabinetServiceSnapshot"/>.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.Restore(FileCabinetApp.FileCabinetServiceSnapshot)">
            <summary>Restores the specified snapshot.</summary>
            <param name="snapshot">Snapshot.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when snapshot is null.</exception>
        </member>
        <member name="T:FileCabinetApp.FileCabinetRecord">
            <summary>Сlass representing a record.</summary>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.Id">
            <summary>Gets or sets the id.</summary>
            <value>Id of record.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.FirstName">
            <summary>Gets or sets the first name.</summary>
            <value>First name of record.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.LastName">
            <summary>Gets or sets the last name.</summary>
            <value>Last name of record.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.DateOfBirth">
            <summary>Gets or sets the date of birth.</summary>
            <value>Date of birth of record.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.WorkPlaceNumber">
            <summary>Gets or sets the work place number.</summary>
            <value>Work place number of record.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.Salary">
            <summary>Gets or sets the salary.</summary>
            <value>Salary of record.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.Department">
            <summary>Gets or sets the department.</summary>
            <value>Department of record.</value>
        </member>
        <member name="T:FileCabinetApp.FileCabinetRecordCsvReader">
            <summary>Provides method to import <see cref="T:FileCabinetApp.FileCabinetRecord"/> records from csv file.</summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordCsvReader.#ctor(System.IO.StreamReader)">
            <summary>Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetRecordCsvReader"/> class.</summary>
            <param name="reader">StreamReader.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordCsvReader.ReadAll">
            <summary>Reads all records from csv file.</summary>
            <returns>Returns List of records.</returns>
        </member>
        <member name="T:FileCabinetApp.FileCabinetRecordCsvWriter">
            <summary>Provides functionality for writing record to csv file.</summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordCsvWriter.#ctor(System.IO.StreamWriter)">
            <summary>Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetRecordCsvWriter"/> class.</summary>
            <param name="writer">StreamWriter.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordCsvWriter.Write(FileCabinetApp.FileCabinetRecord)">
            <summary>Writes the specified record to csv file.</summary>
            <param name="record">Record.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when record is null.</exception>
        </member>
        <member name="T:FileCabinetApp.FileCabinetRecordXmlWriter">
            <summary>Provides functionality for writing record to xml file.</summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordXmlWriter.#ctor(System.Xml.XmlWriter)">
            <summary>Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetRecordXmlWriter"/> class.</summary>
            <param name="writer">StreamWriter.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordXmlWriter.Write(FileCabinetApp.FileCabinetRecord)">
            <summary>Writes the specified record to xml file.</summary>
            <param name="record">Record.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when record is null.</exception>
        </member>
        <member name="T:FileCabinetApp.FileCabinetServiceSnapshot">
            <summary>Provides functionality for creating snapshot.</summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetServiceSnapshot.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{FileCabinetApp.FileCabinetRecord})">
            <summary>Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetServiceSnapshot"/> class.</summary>
            <param name="records">ReadOnlyCollection of records.</param>
        </member>
        <member name="P:FileCabinetApp.FileCabinetServiceSnapshot.Records">
            <summary>Gets collection of records.</summary>
            <value>ReadOnlyCollection of FileCabinetRecord.</value>
        </member>
        <member name="M:FileCabinetApp.FileCabinetServiceSnapshot.LoadFromCsv(System.IO.StreamReader)">
            <summary>Loads records from CSV file.</summary>
            <param name="reader">Reader.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when reader is null.</exception>
            <returns>FileCabinetServiceSnapshot.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetServiceSnapshot.SaveToCsv(System.IO.StreamWriter)">
            <summary>Writes snapshot to csv file.</summary>
            <param name="writer">StreamWriter.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when writer is null.</exception>
        </member>
        <member name="M:FileCabinetApp.FileCabinetServiceSnapshot.SaveToXml(System.Xml.XmlWriter)">
            <summary>Writes snapshot to xml file.</summary>
            <param name="writer">StreamWriter.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when writer is null.</exception>
        </member>
        <member name="T:FileCabinetApp.IFileCabinetService">
            <summary>Provides functionality for interaction with records in the file cabinet.</summary>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.CreateRecord(FileCabinetApp.FileCabinetRecord)">
            <summary>Creates a record and returns its id.</summary>
            <param name="record">Object representing a record.</param>
            <returns>Id of a new record.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.EditRecord(FileCabinetApp.FileCabinetRecord)">
            <summary>Edits a record with the specified id.</summary>
            <param name="record">Object representing a record.</param>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.FindByFirstName(System.String)">
            <summary>Finds records by first name.</summary>
            <param name="firstName">First name to find.</param>
            <returns>Returns readonly collection of found records.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.FindByLastName(System.String)">
            <summary>Finds records by last name.</summary>
            <param name="lastName">Last name to find.</param>
            <returns>Returns readonly collection of found records.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.FindByDateOfBirth(System.String)">
            <summary>Finds records by date of birth.</summary>
            <param name="dateOfBirth">Date of birth to find.</param>
            <returns>Returns readonly collection of found records.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.GetRecords">
            <summary>Returns all records.</summary>
            <returns>Returns readonly collection of all records.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.GetStat">
            <summary>Returns number of records.</summary>
            <returns>Returns number.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.MakeSnapshot">
            <summary>Makes snapshot of current object state.</summary>
            <returns>Returns new <see cref="T:FileCabinetApp.FileCabinetServiceSnapshot"/>.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.Restore(FileCabinetApp.FileCabinetServiceSnapshot)">
            <summary>Restores the specified snapshot.</summary>
            <param name="snapshot">Snapshot.</param>
        </member>
        <member name="T:FileCabinetApp.IRecordValidator">
            <summary>Provides functionality to validate parameters.</summary>
        </member>
        <member name="M:FileCabinetApp.IRecordValidator.NameIsCorrect(System.String)">
            <summary>Name validation.</summary>
            <param name="name">Input string representing the name.</param>
            <returns>Returns true and exception message if name is incorrect, else returns false.</returns>
        </member>
        <member name="M:FileCabinetApp.IRecordValidator.DateOfBirthIsCorrect(System.DateTime)">
            <summary>Date of birth validation.</summary>
            <param name="dateOfBirth">Date of birth.</param>
            <returns>Returns true and exception message if date of birth is incorrect, else returns false.</returns>
        </member>
        <member name="M:FileCabinetApp.IRecordValidator.WorkPlaceNumberIsCorrect(System.Int16)">
            <summary>Work place number validation.</summary>
            <param name="workPlaceNumber">Work place number.</param>
            <returns>Returns true and exception message if work place number is incorrect, else returns false.</returns>
        </member>
        <member name="M:FileCabinetApp.IRecordValidator.SalaryIsCorrect(System.Decimal)">
            <summary>Salary validation.</summary>
            <param name="salary">Salary.</param>
            <returns>Returns true and exception message if salary is incorrect, else returns false.</returns>
        </member>
        <member name="M:FileCabinetApp.IRecordValidator.DepartmentIsCorrect(System.Char)">
            <summary>Department validation.</summary>
            <param name="department">Department.</param>
            <returns>Returns true and exception message if department is incorrect, else returns false.</returns>
        </member>
        <member name="M:FileCabinetApp.IRecordValidator.ValidateParameters(FileCabinetApp.FileCabinetRecord)">
            <summary>Record validation.</summary>
            <param name="record">Object representing a record.</param>
        </member>
        <member name="T:FileCabinetApp.Program">
            <summary>Main class of the project.</summary>
        </member>
        <member name="M:FileCabinetApp.Program.Main(System.String[])">
            <summary>Defines the entry point of the application.</summary>
            <param name="args">Command line arguments.</param>
        </member>
    </members>
</doc>
